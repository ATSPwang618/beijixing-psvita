plugins {
    id 'com.android.application'
}

android {
    namespace = "com.borealis.demo"
    compileSdkVersion 31
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        // borealis need at least ndk r22 (r21 don't have std::filesystem support)
        // The newer NDK library will cause lower versions of Android failed to run.
        // r26: support api21 and later
        // r24/r25: support api19 and later
        // r22/23: support api16 and later
        ndkVersion "22.1.7171670"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_PLATFORM=android-16", "-DANDROID_STL=c++_shared", "-DCMAKE_WARN_DEPRECATED=FALSE"
                // abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
                abiFilters 'armeabi-v7a', 'arm64-v8a'
                version = '3.16.0+'
            }
        }
    }
    signingConfigs {
        release {
            // keytool -genkey -alias borealis -keyalg RSA -keypass password -keystore borealis.jks -storepass password -validity 100000
            storeFile file("borealis.jks")
            storePassword 'password'
            keyAlias 'borealis'
            keyPassword 'password'
            // Optional, specify signing versions used
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    applicationVariants.all { variant ->
        tasks["merge${variant.name.capitalize()}Assets"]
            .dependsOn("externalNativeBuild${variant.name.capitalize()}")
    }
    if (!project.hasProperty('EXCLUDE_NATIVE_LIBS')) {
        sourceSets.main {
            jniLibs.srcDir 'libs'
        }
        externalNativeBuild {
            cmake {
                path 'jni/CMakeLists.txt'
                version = '3.16.0+'
            }
        }
    }
    lint {
        abortOnError = false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
}
